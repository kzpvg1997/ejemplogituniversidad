/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.eam.disenosoft.universidad.vista.gui;

import java.awt.event.ItemEvent;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import co.edu.eam.disenosoft.universidad.logica.excepciones.ExcepcionNegocio;
import co.edu.eam.disenosoft.universidad.modelo.Asignatura;
import co.edu.eam.disenosoft.universidad.modelo.Curso;
import co.edu.eam.disenosoft.universidad.modelo.Docente;
import co.edu.eam.disenosoft.universidad.modelo.Estudiante;
import co.edu.eam.disenosoft.universidad.modelo.Evaluacion;
import co.edu.eam.disenosoft.universidad.modelo.Nota;
import co.edu.eam.disenosoft.universidad.modelo.Profesion;
import co.edu.eam.disenosoft.universidad.modelo.RegistroCurso;
import co.edu.eam.disenosoft.universidad.modelo.SesionCurso;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorAdminEstudiante;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorCrearCalificacion;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorCrearCurso;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorNota;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorProfesor;
import co.edu.eam.disenosoft.universidad.vista.controladores.ControladorVerCurso;
import co.edu.eam.ingesoft.desarrollo.universidad.persistencia.dao.definiciones.IDAONota;
import co.edu.eam.ingesoft.desarrollo.universidad.persistencia.dao.implementacion.jdbc.DAONotaJDBC;
import co.edu.eam.ingesoft.desarrollo.universidad.persistencia.dao.implementacion.jpa.DAONotaJPA;

public class VentanaIngresarCalificaciones extends javax.swing.JInternalFrame {

	/**
	 * Creates new form VentanaIngresarCalificaciones
	 */
	private ControladorNota conNota;
	private ControladorProfesor conDocente;
	private ControladorVerCurso conVerCurso;
	private ControladorCrearCalificacion conCalificacion;
	private ControladorCrearCurso conCrearCurso;
	private ControladorAdminEstudiante conEstudiante;

	public VentanaIngresarCalificaciones() {
		initComponents();
		setVisible(true);
		setMaximizable(false);
		setIconifiable(true);
		setResizable(false);
		setClosable(true);
		btnCalificar.setEnabled(false);
		brtnEditar.setEnabled(false);
		conNota = new ControladorNota();
		conDocente = new ControladorProfesor();
		conVerCurso = new ControladorVerCurso();
		conCalificacion = new ControladorCrearCalificacion();
		conCrearCurso = new ControladorCrearCurso();
		conEstudiante = new ControladorAdminEstudiante();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel2 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		tfceduladocente = new javax.swing.JTextField();
		btnBuscarDocente = new javax.swing.JButton();
		jLabel4 = new javax.swing.JLabel();
		tfnombredocente = new javax.swing.JTextField();
		jPanel1 = new javax.swing.JPanel();
		comboCurso = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		combocalificacion = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		jPanel3 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tablaCalificaicon = new javax.swing.JTable();
		btnCalificar = new javax.swing.JButton();
		brtnEditar = new javax.swing.JButton();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();

		setTitle("Ingresar Calificaiones");
		setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/check44.png"))); // NOI18N

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Docente"));

		jLabel3.setText("Cedula");

		btnBuscarDocente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom37.png"))); // NOI18N
		btnBuscarDocente.setToolTipText("Buscar Docente");
		btnBuscarDocente.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnBuscarDocenteActionPerformed(evt);
			}
		});

		jLabel4.setText("Nombre");

		tfnombredocente.setEditable(false);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel3).addComponent(jLabel4))
						.addGap(25, 25, 25)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(tfceduladocente, javax.swing.GroupLayout.DEFAULT_SIZE, 230,
										Short.MAX_VALUE)
								.addComponent(tfnombredocente))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnBuscarDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 77,
								javax.swing.GroupLayout.PREFERRED_SIZE)));
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout
						.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(btnBuscarDocente, javax.swing.GroupLayout.Alignment.LEADING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(tfceduladocente, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(tfnombredocente, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel4))))
						.addGap(5, 5, 5)));

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Calificaciones"));

		comboCurso.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				comboCursoItemStateChanged(evt);
			}
		});

		jLabel5.setText("Curso");

		jLabel6.setText("Calificacion");

		combocalificacion.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				combocalificacionItemStateChanged(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(31, 31, 31)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
								.addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(comboCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(combocalificacion, 0, 209, Short.MAX_VALUE))
						.addGap(74, 74, 74)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5).addComponent(comboCurso, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel6).addComponent(combocalificacion,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(0, 33, Short.MAX_VALUE)));

		jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/check44.png"))); // NOI18N
		jLabel1.setText("jLabel1");

		jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado Estudiantes"));

		tablaCalificaicon
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Cedula", "Nombre", "Apellido", "Calificacion" }));
		jScrollPane1.setViewportView(tablaCalificaicon);

		btnCalificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pen41.png"))); // NOI18N
		btnCalificar.setToolTipText("Calificar Estudiante Seleccionado de la Tabla");
		btnCalificar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCalificarActionPerformed(evt);
			}
		});

		brtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pen38.png"))); // NOI18N
		brtnEditar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				brtnEditarActionPerformed(evt);
			}
		});

		jLabel7.setText("Editar calificacion");

		jLabel8.setText("Crear calificacion");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout
				.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel3Layout.createSequentialGroup()
								.addContainerGap().addGroup(jPanel3Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
												jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(jPanel3Layout.createSequentialGroup()
																.addGap(24, 24, 24).addComponent(btnCalificar))
														.addComponent(jLabel8))
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
														.addGroup(jPanel3Layout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(jPanel3Layout.createSequentialGroup()
																		.addGap(9, 9, 9).addComponent(brtnEditar,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				89,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
																.addComponent(jLabel7,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 108,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(0, 0, Short.MAX_VALUE)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnCalificar, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.PREFERRED_SIZE, 35,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(brtnEditar, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.PREFERRED_SIZE, 40,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(4, 4, 4)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel8).addComponent(jLabel7))
						.addGap(72, 72, 72)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(42, 42, 42)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
				.addContainerGap(33, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 337,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addContainerGap(15, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton brtnEditar;
	private javax.swing.JButton btnBuscarDocente;
	private javax.swing.JButton btnCalificar;
	private javax.swing.JComboBox comboCurso;
	private javax.swing.JComboBox combocalificacion;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable tablaCalificaicon;
	private javax.swing.JTextField tfceduladocente;
	private javax.swing.JTextField tfnombredocente;
	// End of variables declaration//GEN-END:variables

	private void btnCalificarActionPerformed(java.awt.event.ActionEvent evt) {

	
		try {
			if (tablaCalificaicon.getSelectedRow() == -1) {
				JOptionPane.showMessageDialog(null, "Por favor seleccione un estudiante a calificar", "ERROR",
						JOptionPane.ERROR_MESSAGE);
			} else {
				double calificacion = Double.parseDouble(JOptionPane.showInputDialog(null,
						"Por favor ingrese la calicicacion del estudiante", "INGRESE", JOptionPane.QUESTION_MESSAGE));
				if(calificacion<0.0||calificacion>5.0){
					JOptionPane.showMessageDialog(null, "La calificacion tiene que ser mayor a 0.0 y menor a 5.0", "ERROR", JOptionPane.ERROR_MESSAGE);
					return;
				}else{
				String cedula = tfceduladocente.getText();
				Curso curso = (Curso) comboCurso.getSelectedItem();
				int pos = tablaCalificaicon.getSelectedRow();
				Evaluacion evaluacion = (Evaluacion) combocalificacion.getSelectedItem();
				List<RegistroCurso> registros = conVerCurso.listaEstudiantesCurso(curso);
				Nota nota = new Nota(false, calificacion, evaluacion, registros.get(pos));
				conNota.registrarNota(registros.get(pos), nota,evaluacion);
				
				JOptionPane.showMessageDialog(null, "Se calificado exitosamente", "EXITO",JOptionPane.INFORMATION_MESSAGE);
				cargarEstudianteCurso(curso, evaluacion);

//				for (RegistroCurso rc : registros) {
//				Estudiante estudiante = rc.getEstudiante();
//				RegistroCurso registroCurso = new RegistroCurso(estudiante, curso);
//				Nota nota = new Nota(true, calificacion, evaluacion, registroCurso);
//				conNota.crearNota(nota);
//				
//				cargarEstudianteCurso(curso, evaluacion);
//				JOptionPane.showMessageDialog(null, "Se calificado exitosamente", "EXITO",JOptionPane.INFORMATION_MESSAGE);
//				
//			}
		}
		}
		}catch (ExcepcionNegocio ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
				
				
	}

	private void btnBuscarDocenteActionPerformed(java.awt.event.ActionEvent evt) {

		String cedula = tfceduladocente.getText();
		String nombre = tfnombredocente.getText();

		if (tfceduladocente.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Ingrese la cedula del docente", "INGRESE", JOptionPane.ERROR_MESSAGE);
		} else {
			try {
				Docente doc = conDocente.buscar(cedula);
				List<Curso> curso = conVerCurso.listaCursosByDocente(doc);

				if (doc != null) {

					comboCurso.removeAllItems();
					for (Curso curso2 : curso) {

						tfnombredocente.setText(doc.getNombre() + " " + doc.getApellido());
						comboCurso.addItem(curso2);

					}
				}

			} catch (ExcepcionNegocio ex) {
				JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	private void comboCursoItemStateChanged(java.awt.event.ItemEvent evt) {

		Curso curso = (Curso) comboCurso.getSelectedItem();
		if (curso != null) {

			cargarEvaluacionCurso(curso);
			Evaluacion evaluacion = (Evaluacion) combocalificacion.getSelectedItem();
			if (evaluacion != null) {
				cargarEstudianteCurso(curso, evaluacion);
			}
		}
	}

	private void combocalificacionItemStateChanged(java.awt.event.ItemEvent evt) {

	}

	public void cargarEvaluacionCurso(Curso cu) {

		combocalificacion.removeAllItems();
		try {
			List<Evaluacion> evaluaciones = conCalificacion.listarEvaluacionesCurso(cu);
			for (Evaluacion evaluacion : evaluaciones) {

				combocalificacion.addItem(evaluacion);
			}

		} catch (ExcepcionNegocio ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void cargarEstudianteCurso(Curso curso, Evaluacion evaluacion) {
		try {
			DefaultTableModel table = (DefaultTableModel) tablaCalificaicon.getModel();
			table.setRowCount(0);
			String calificacion = "NC";
			List<RegistroCurso> registros = conVerCurso.listaEstudiantesCurso(curso);
			if (registros.size() > 0) {
				for (RegistroCurso rc : registros) {
					
					if (rc.getNotas()!=null) {
						List<Nota> notas = rc.getNotas();
						for (Nota nota : notas) {
							if (nota.getEvaluacion().getId() == evaluacion.getId()) {
								calificacion = nota.getValor()+"";
							}
						}
						table.addRow(new Object[] { rc.getEstudiante().getCedula(), rc.getEstudiante().getNombre(),
								rc.getEstudiante().getApellido(), calificacion });
					}else{
						table.addRow(new Object[] { rc.getEstudiante().getCedula(), rc.getEstudiante().getNombre(),
								rc.getEstudiante().getApellido(), calificacion });
					}
					
				}
				btnCalificar.setEnabled(true);
				brtnEditar.setEnabled(true);
			} else {
				btnCalificar.setEnabled(false);
				brtnEditar.setEnabled(false);
			}

		} catch (ExcepcionNegocio ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
        
        private void brtnEditarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_brtnEditarActionPerformed
		
        	if(tablaCalificaicon.getSelectedRow()==-1){
        		JOptionPane.showMessageDialog(null, "Eliga la calificacion que desea editar", "ERROR", JOptionPane.ERROR_MESSAGE);
        	}else{
        		try {
        			double calificacion = Double.parseDouble(JOptionPane.showInputDialog(null,
    						"Por favor ingrese la calicicacion del estudiante", "INGRESE", JOptionPane.QUESTION_MESSAGE));
    				if(calificacion<0.0||calificacion>5.0){
    					JOptionPane.showMessageDialog(null, "La calificacion tiene que ser mayor a 0.0 y menor a 5.0", "ERROR", JOptionPane.ERROR_MESSAGE);
    					return;
    				}else{
        			String cedula = tfceduladocente.getText();
    				Curso curso = (Curso) comboCurso.getSelectedItem();
    				int pos = tablaCalificaicon.getSelectedRow();
    				Evaluacion evaluacion = (Evaluacion) combocalificacion.getSelectedItem();
    				List<RegistroCurso> registros = conVerCurso.listaEstudiantesCurso(curso);
    				Nota nota = new Nota(true, calificacion, evaluacion, registros.get(pos));
    				
    					conNota.editarNota(registros.get(pos), nota,evaluacion);
        				
        				JOptionPane.showMessageDialog(null, "Se calificado exitosamente", "EXITO",JOptionPane.INFORMATION_MESSAGE);
        				cargarEstudianteCurso(curso, evaluacion);
    				
    				
    				}
				}catch (ExcepcionNegocio ex) {
					JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
				}  catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				
				}
        	}
        }


//DefaultTableModel tm = (DefaultTableModel) tablaCalificaicon.getModel(); 
//String dato=String.valueOf(tm.getValueAt(tablaCalificaicon.getSelectedRow(),0));
//
//String cedula = dato;
//
//Estudiante estudiante = conEstudiante.buscar(cedula);
//if(estudiante!=null){
//	double calificacion = Double.parseDouble(JOptionPane.showInputDialog(null,
//			"Por favor ingrese la calicicacion del estudiante", "INGRESE", JOptionPane.QUESTION_MESSAGE));
//	if(calificacion<0.0||calificacion>5.0){
//		JOptionPane.showMessageDialog(null, "La calificacion tiene que ser mayor a 0.0 y menor a 5.0", "ERROR", JOptionPane.ERROR_MESSAGE);
//		return;
//	}else{
//		
//	
//	Curso curso = (Curso) comboCurso.getSelectedItem();
//	Evaluacion evaluacion = (Evaluacion) combocalificacion.getSelectedItem();
//	List<RegistroCurso> registros = conVerCurso.listaEstudiantesCurso(curso);
//	for (RegistroCurso rc : registros) {
//	RegistroCurso registroCurso = new RegistroCurso(estudiante, curso);
//	Nota nota = conNota.buscarNota(estudiante);
//	boolean verificar = conNota.verificarEditada(nota);
//	System.out.println(verificar);
//	if(verificar==true){
//	
//		conNota.editarNota(nota);
//		JOptionPane.showMessageDialog(null, "Se ha editado correctamente", "EXITO", JOptionPane.ERROR_MESSAGE);
//		}else{
//			JOptionPane.showMessageDialog(null, "Esta nota ya se ha editado", "ERROR", JOptionPane.ERROR_MESSAGE);
//		}
//	}
//	
//}
}
